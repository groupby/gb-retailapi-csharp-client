/*
 * GroupBy Retail
 *
 * GroupBy Retail API
 *
 * The version of the OpenAPI document: 0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using GroupByInc.RetailApi.Client.Client;
using GroupByInc.RetailApi.Client.Api;
// uncomment below to import models
//using GroupByInc.RetailApi.Client.Model;

namespace GroupByInc.RetailApi.Client.Test.Api
{
    /// <summary>
    ///  Class for testing SearchApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class SearchApiTests : IDisposable
    {
        private SearchApi instance;

        public SearchApiTests()
        {
            instance = new SearchApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of SearchApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' SearchApi
            //Assert.IsType<SearchApi>(instance);
        }

        /// <summary>
        /// Test FacetSearch
        /// </summary>
        [Fact]
        public void FacetSearchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xGroupbyCustomerId = null;
            //FacetSearchRequestDto facetSearchRequestDto = null;
            //var response = instance.FacetSearch(xGroupbyCustomerId, facetSearchRequestDto);
            //Assert.IsType<FacetSearchResponseDto>(response);
        }

        /// <summary>
        /// Test Search
        /// </summary>
        [Fact]
        public void SearchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xGroupbyCustomerId = null;
            //SearchRequestDto searchRequestDto = null;
            //var response = instance.Search(xGroupbyCustomerId, searchRequestDto);
            //Assert.IsType<SearchResponseDto>(response);
        }
    }
}
