/*
 * GroupBy Retail
 *
 * GroupBy Retail API
 *
 * The version of the OpenAPI document: 0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using GroupByInc.RetailApi.Client.Model;
using GroupByInc.RetailApi.Client.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace GroupByInc.RetailApi.Client.Test.Model
{
    /// <summary>
    ///  Class for testing PriceInfoPriceRangePrice
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class PriceInfoPriceRangePriceTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for PriceInfoPriceRangePrice
        //private PriceInfoPriceRangePrice instance;

        public PriceInfoPriceRangePriceTests()
        {
            // TODO uncomment below to create an instance of PriceInfoPriceRangePrice
            //instance = new PriceInfoPriceRangePrice();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of PriceInfoPriceRangePrice
        /// </summary>
        [Fact]
        public void PriceInfoPriceRangePriceInstanceTest()
        {
            // TODO uncomment below to test "IsType" PriceInfoPriceRangePrice
            //Assert.IsType<PriceInfoPriceRangePrice>(instance);
        }

        /// <summary>
        /// Test the property 'Minimum'
        /// </summary>
        [Fact]
        public void MinimumTest()
        {
            // TODO unit test for the property 'Minimum'
        }

        /// <summary>
        /// Test the property 'ExclusiveMinimum'
        /// </summary>
        [Fact]
        public void ExclusiveMinimumTest()
        {
            // TODO unit test for the property 'ExclusiveMinimum'
        }

        /// <summary>
        /// Test the property 'Maximum'
        /// </summary>
        [Fact]
        public void MaximumTest()
        {
            // TODO unit test for the property 'Maximum'
        }

        /// <summary>
        /// Test the property 'ExclusiveMaximum'
        /// </summary>
        [Fact]
        public void ExclusiveMaximumTest()
        {
            // TODO unit test for the property 'ExclusiveMaximum'
        }
    }
}
