/*
 * GroupBy Retail
 *
 * GroupBy Retail API
 *
 * The version of the OpenAPI document: 0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using GroupByInc.RetailApi.Client.Model;
using GroupByInc.RetailApi.Client.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace GroupByInc.RetailApi.Client.Test.Model
{
    /// <summary>
    ///  Class for testing Request
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class RequestTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for Request
        //private Request instance;

        public RequestTests()
        {
            // TODO uncomment below to create an instance of Request
            //instance = new Request();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of Request
        /// </summary>
        [Fact]
        public void RequestInstanceTest()
        {
            // TODO uncomment below to test "IsType" Request
            //Assert.IsType<Request>(instance);
        }

        /// <summary>
        /// Test the property 'Area'
        /// </summary>
        [Fact]
        public void AreaTest()
        {
            // TODO unit test for the property 'Area'
        }

        /// <summary>
        /// Test the property 'Collection'
        /// </summary>
        [Fact]
        public void CollectionTest()
        {
            // TODO unit test for the property 'Collection'
        }

        /// <summary>
        /// Test the property 'SearchItems'
        /// </summary>
        [Fact]
        public void SearchItemsTest()
        {
            // TODO unit test for the property 'SearchItems'
        }

        /// <summary>
        /// Test the property 'Query'
        /// </summary>
        [Fact]
        public void QueryTest()
        {
            // TODO unit test for the property 'Query'
        }

        /// <summary>
        /// Test the property 'EnableAttributeSuggestion'
        /// </summary>
        [Fact]
        public void EnableAttributeSuggestionTest()
        {
            // TODO unit test for the property 'EnableAttributeSuggestion'
        }

        /// <summary>
        /// Test the property 'ExtendedSuggestions'
        /// </summary>
        [Fact]
        public void ExtendedSuggestionsTest()
        {
            // TODO unit test for the property 'ExtendedSuggestions'
        }

        /// <summary>
        /// Test the property 'ExtendedAttributes'
        /// </summary>
        [Fact]
        public void ExtendedAttributesTest()
        {
            // TODO unit test for the property 'ExtendedAttributes'
        }

        /// <summary>
        /// Test the property 'VisitorId'
        /// </summary>
        [Fact]
        public void VisitorIdTest()
        {
            // TODO unit test for the property 'VisitorId'
        }

        /// <summary>
        /// Test the property 'Site'
        /// </summary>
        [Fact]
        public void SiteTest()
        {
            // TODO unit test for the property 'Site'
        }
    }
}
