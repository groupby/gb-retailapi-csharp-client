/*
 * GroupBy Retail
 *
 * GroupBy Retail API
 *
 * The version of the OpenAPI document: 0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using GroupByInc.RetailApi.Client.Model;
using GroupByInc.RetailApi.Client.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace GroupByInc.RetailApi.Client.Test.Model
{
    /// <summary>
    ///  Class for testing ProductDto
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class ProductDtoTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for ProductDto
        //private ProductDto instance;

        public ProductDtoTests()
        {
            // TODO uncomment below to create an instance of ProductDto
            //instance = new ProductDto();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ProductDto
        /// </summary>
        [Fact]
        public void ProductDtoInstanceTest()
        {
            // TODO uncomment below to test "IsType" ProductDto
            //Assert.IsType<ProductDto>(instance);
        }

        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Fact]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }

        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Fact]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }

        /// <summary>
        /// Test the property 'Type'
        /// </summary>
        [Fact]
        public void TypeTest()
        {
            // TODO unit test for the property 'Type'
        }

        /// <summary>
        /// Test the property 'PrimaryProductId'
        /// </summary>
        [Fact]
        public void PrimaryProductIdTest()
        {
            // TODO unit test for the property 'PrimaryProductId'
        }

        /// <summary>
        /// Test the property 'CollectionMemberIds'
        /// </summary>
        [Fact]
        public void CollectionMemberIdsTest()
        {
            // TODO unit test for the property 'CollectionMemberIds'
        }

        /// <summary>
        /// Test the property 'Gtin'
        /// </summary>
        [Fact]
        public void GtinTest()
        {
            // TODO unit test for the property 'Gtin'
        }

        /// <summary>
        /// Test the property 'Categories'
        /// </summary>
        [Fact]
        public void CategoriesTest()
        {
            // TODO unit test for the property 'Categories'
        }

        /// <summary>
        /// Test the property 'Title'
        /// </summary>
        [Fact]
        public void TitleTest()
        {
            // TODO unit test for the property 'Title'
        }

        /// <summary>
        /// Test the property 'Brands'
        /// </summary>
        [Fact]
        public void BrandsTest()
        {
            // TODO unit test for the property 'Brands'
        }

        /// <summary>
        /// Test the property 'Description'
        /// </summary>
        [Fact]
        public void DescriptionTest()
        {
            // TODO unit test for the property 'Description'
        }

        /// <summary>
        /// Test the property 'LanguageCode'
        /// </summary>
        [Fact]
        public void LanguageCodeTest()
        {
            // TODO unit test for the property 'LanguageCode'
        }

        /// <summary>
        /// Test the property 'Attributes'
        /// </summary>
        [Fact]
        public void AttributesTest()
        {
            // TODO unit test for the property 'Attributes'
        }

        /// <summary>
        /// Test the property 'Tags'
        /// </summary>
        [Fact]
        public void TagsTest()
        {
            // TODO unit test for the property 'Tags'
        }

        /// <summary>
        /// Test the property 'PriceInfo'
        /// </summary>
        [Fact]
        public void PriceInfoTest()
        {
            // TODO unit test for the property 'PriceInfo'
        }

        /// <summary>
        /// Test the property 'Rating'
        /// </summary>
        [Fact]
        public void RatingTest()
        {
            // TODO unit test for the property 'Rating'
        }

        /// <summary>
        /// Test the property 'AvailableTime'
        /// </summary>
        [Fact]
        public void AvailableTimeTest()
        {
            // TODO unit test for the property 'AvailableTime'
        }

        /// <summary>
        /// Test the property 'Availability'
        /// </summary>
        [Fact]
        public void AvailabilityTest()
        {
            // TODO unit test for the property 'Availability'
        }

        /// <summary>
        /// Test the property 'AvailableQuantity'
        /// </summary>
        [Fact]
        public void AvailableQuantityTest()
        {
            // TODO unit test for the property 'AvailableQuantity'
        }

        /// <summary>
        /// Test the property 'FulfillmentInfos'
        /// </summary>
        [Fact]
        public void FulfillmentInfosTest()
        {
            // TODO unit test for the property 'FulfillmentInfos'
        }

        /// <summary>
        /// Test the property 'Uri'
        /// </summary>
        [Fact]
        public void UriTest()
        {
            // TODO unit test for the property 'Uri'
        }

        /// <summary>
        /// Test the property 'Images'
        /// </summary>
        [Fact]
        public void ImagesTest()
        {
            // TODO unit test for the property 'Images'
        }

        /// <summary>
        /// Test the property 'Audience'
        /// </summary>
        [Fact]
        public void AudienceTest()
        {
            // TODO unit test for the property 'Audience'
        }

        /// <summary>
        /// Test the property 'ColorInfo'
        /// </summary>
        [Fact]
        public void ColorInfoTest()
        {
            // TODO unit test for the property 'ColorInfo'
        }

        /// <summary>
        /// Test the property 'Sizes'
        /// </summary>
        [Fact]
        public void SizesTest()
        {
            // TODO unit test for the property 'Sizes'
        }

        /// <summary>
        /// Test the property 'Materials'
        /// </summary>
        [Fact]
        public void MaterialsTest()
        {
            // TODO unit test for the property 'Materials'
        }

        /// <summary>
        /// Test the property 'Patterns'
        /// </summary>
        [Fact]
        public void PatternsTest()
        {
            // TODO unit test for the property 'Patterns'
        }

        /// <summary>
        /// Test the property 'Conditions'
        /// </summary>
        [Fact]
        public void ConditionsTest()
        {
            // TODO unit test for the property 'Conditions'
        }

        /// <summary>
        /// Test the property 'PublishTime'
        /// </summary>
        [Fact]
        public void PublishTimeTest()
        {
            // TODO unit test for the property 'PublishTime'
        }

        /// <summary>
        /// Test the property 'RetrievableFields'
        /// </summary>
        [Fact]
        public void RetrievableFieldsTest()
        {
            // TODO unit test for the property 'RetrievableFields'
        }

        /// <summary>
        /// Test the property 'Promotions'
        /// </summary>
        [Fact]
        public void PromotionsTest()
        {
            // TODO unit test for the property 'Promotions'
        }

        /// <summary>
        /// Test the property 'Variants'
        /// </summary>
        [Fact]
        public void VariantsTest()
        {
            // TODO unit test for the property 'Variants'
        }
    }
}
