/*
 * GroupBy Retail
 *
 * GroupBy Retail API
 *
 * The version of the OpenAPI document: 0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using GroupByInc.RetailApi.Client.Model;
using GroupByInc.RetailApi.Client.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace GroupByInc.RetailApi.Client.Test.Model
{
    /// <summary>
    ///  Class for testing PriceInfo
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class PriceInfoTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for PriceInfo
        //private PriceInfo instance;

        public PriceInfoTests()
        {
            // TODO uncomment below to create an instance of PriceInfo
            //instance = new PriceInfo();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of PriceInfo
        /// </summary>
        [Fact]
        public void PriceInfoInstanceTest()
        {
            // TODO uncomment below to test "IsType" PriceInfo
            //Assert.IsType<PriceInfo>(instance);
        }

        /// <summary>
        /// Test the property 'CurrencyCode'
        /// </summary>
        [Fact]
        public void CurrencyCodeTest()
        {
            // TODO unit test for the property 'CurrencyCode'
        }

        /// <summary>
        /// Test the property 'Price'
        /// </summary>
        [Fact]
        public void PriceTest()
        {
            // TODO unit test for the property 'Price'
        }

        /// <summary>
        /// Test the property 'OriginalPrice'
        /// </summary>
        [Fact]
        public void OriginalPriceTest()
        {
            // TODO unit test for the property 'OriginalPrice'
        }

        /// <summary>
        /// Test the property 'Cost'
        /// </summary>
        [Fact]
        public void CostTest()
        {
            // TODO unit test for the property 'Cost'
        }

        /// <summary>
        /// Test the property 'PriceEffectiveTime'
        /// </summary>
        [Fact]
        public void PriceEffectiveTimeTest()
        {
            // TODO unit test for the property 'PriceEffectiveTime'
        }

        /// <summary>
        /// Test the property 'PriceExpireTime'
        /// </summary>
        [Fact]
        public void PriceExpireTimeTest()
        {
            // TODO unit test for the property 'PriceExpireTime'
        }

        /// <summary>
        /// Test the property 'PriceRange'
        /// </summary>
        [Fact]
        public void PriceRangeTest()
        {
            // TODO unit test for the property 'PriceRange'
        }
    }
}
