/*
 * GroupBy Retail
 *
 * GroupBy Retail API
 *
 * The version of the OpenAPI document: 0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using GroupByInc.RetailApi.Client.Model;
using GroupByInc.RetailApi.Client.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace GroupByInc.RetailApi.Client.Test.Model
{
    /// <summary>
    ///  Class for testing RuleConfiguration
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class RuleConfigurationTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for RuleConfiguration
        //private RuleConfiguration instance;

        public RuleConfigurationTests()
        {
            // TODO uncomment below to create an instance of RuleConfiguration
            //instance = new RuleConfiguration();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of RuleConfiguration
        /// </summary>
        [Fact]
        public void RuleConfigurationInstanceTest()
        {
            // TODO uncomment below to test "IsType" RuleConfiguration
            //Assert.IsType<RuleConfiguration>(instance);
        }

        /// <summary>
        /// Test the property 'RuleInExperiment'
        /// </summary>
        [Fact]
        public void RuleInExperimentTest()
        {
            // TODO unit test for the property 'RuleInExperiment'
        }

        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Fact]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }

        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Fact]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }

        /// <summary>
        /// Test the property 'AreaId'
        /// </summary>
        [Fact]
        public void AreaIdTest()
        {
            // TODO unit test for the property 'AreaId'
        }

        /// <summary>
        /// Test the property 'Priority'
        /// </summary>
        [Fact]
        public void PriorityTest()
        {
            // TODO unit test for the property 'Priority'
        }

        /// <summary>
        /// Test the property 'Enabled'
        /// </summary>
        [Fact]
        public void EnabledTest()
        {
            // TODO unit test for the property 'Enabled'
        }

        /// <summary>
        /// Test the property 'ActiveHoursEnabled'
        /// </summary>
        [Fact]
        public void ActiveHoursEnabledTest()
        {
            // TODO unit test for the property 'ActiveHoursEnabled'
        }

        /// <summary>
        /// Test the property 'ActiveFrom'
        /// </summary>
        [Fact]
        public void ActiveFromTest()
        {
            // TODO unit test for the property 'ActiveFrom'
        }

        /// <summary>
        /// Test the property 'ActiveTo'
        /// </summary>
        [Fact]
        public void ActiveToTest()
        {
            // TODO unit test for the property 'ActiveTo'
        }

        /// <summary>
        /// Test the property 'TriggerSets'
        /// </summary>
        [Fact]
        public void TriggerSetsTest()
        {
            // TODO unit test for the property 'TriggerSets'
        }

        /// <summary>
        /// Test the property 'BiasingProfileName'
        /// </summary>
        [Fact]
        public void BiasingProfileNameTest()
        {
            // TODO unit test for the property 'BiasingProfileName'
        }

        /// <summary>
        /// Test the property 'Sort'
        /// </summary>
        [Fact]
        public void SortTest()
        {
            // TODO unit test for the property 'Sort'
        }

        /// <summary>
        /// Test the property 'IncludedNavigations'
        /// </summary>
        [Fact]
        public void IncludedNavigationsTest()
        {
            // TODO unit test for the property 'IncludedNavigations'
        }

        /// <summary>
        /// Test the property 'ValueFilters'
        /// </summary>
        [Fact]
        public void ValueFiltersTest()
        {
            // TODO unit test for the property 'ValueFilters'
        }

        /// <summary>
        /// Test the property 'SearchFilters'
        /// </summary>
        [Fact]
        public void SearchFiltersTest()
        {
            // TODO unit test for the property 'SearchFilters'
        }

        /// <summary>
        /// Test the property 'RangeFilters'
        /// </summary>
        [Fact]
        public void RangeFiltersTest()
        {
            // TODO unit test for the property 'RangeFilters'
        }

        /// <summary>
        /// Test the property 'Template'
        /// </summary>
        [Fact]
        public void TemplateTest()
        {
            // TODO unit test for the property 'Template'
        }

        /// <summary>
        /// Test the property 'BoostedProductBuckets'
        /// </summary>
        [Fact]
        public void BoostedProductBucketsTest()
        {
            // TODO unit test for the property 'BoostedProductBuckets'
        }

        /// <summary>
        /// Test the property 'PinnedRefinements'
        /// </summary>
        [Fact]
        public void PinnedRefinementsTest()
        {
            // TODO unit test for the property 'PinnedRefinements'
        }

        /// <summary>
        /// Test the property 'MessageType'
        /// </summary>
        [Fact]
        public void MessageTypeTest()
        {
            // TODO unit test for the property 'MessageType'
        }

        /// <summary>
        /// Test the property 'Type'
        /// </summary>
        [Fact]
        public void TypeTest()
        {
            // TODO unit test for the property 'Type'
        }

        /// <summary>
        /// Test the property 'Variants'
        /// </summary>
        [Fact]
        public void VariantsTest()
        {
            // TODO unit test for the property 'Variants'
        }
    }
}
